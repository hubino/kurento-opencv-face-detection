/* Autogenerated with kurento-module-creator */

#ifndef __OPENCV_PLUGIN_SAMPLE_OPENCV_IMPL_HPP__
#define __OPENCV_PLUGIN_SAMPLE_OPENCV_IMPL_HPP__

#include <OpenCVProcess.hpp>
#include "OpencvPluginSample.hpp"
#include <EventHandler.hpp>

namespace kurento
{
namespace module
{
namespace opencvpluginsample
{

class OpencvPluginSampleOpenCVImpl : public virtual OpenCVProcess
{
protected:

  virtual std::shared_ptr<MediaObject> getSharedFromThis()=0;

public:

  OpencvPluginSampleOpenCVImpl ();

  virtual ~OpencvPluginSampleOpenCVImpl () {};

  virtual void process (cv::Mat &mat);

  void setFilterType (int filterType);
  void setEdgeThreshold (int edgeValue);
  sigc::signal<void, FaceDetected> signalFaceDetected;

private:

  int filterType;
  int edgeValue;

};

} /* opencvpluginsample */
} /* module */
} /* kurento */

#endif /*  __OPENCV_PLUGIN_SAMPLE_OPENCV_IMPL_HPP__ */
